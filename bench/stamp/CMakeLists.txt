get_filename_component(LIB_DIR lib REALPATH)

if(CMAKE_CXX_COMPILER_ID MATCHES "XL")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -qalias=noansi")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -qalias=noansi")
elseif(CMAKE_CXX_COMPILER_ID MATCHES "GNU")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=gnu99")
endif()

include_directories(lib)

if(EXISTS /usr/global/tools/papi/bgqos_0/papi-5.0.1-V1R1M2/include)
  set(PAPI_INCLUDE_DIRS /usr/global/tools/papi/bgqos_0/papi-5.0.1-V1R1M2/include)
  set(PAPI_LIBRARIES /usr/global/tools/papi/bgqos_0/papi-5.0.1-V1R1M2/lib/libpapi.a rt)
else()
  set(PAPI_INCLUDE_DIRS /usr/lib64/papi-5.1.1/usr/include)
  set(PAPI_LIBRARIES /usr/lib64/papi-5.1.1/usr/lib/libpapi.so rt)
endif()

if(USE_PAPI)
  include_directories(${PAPI_INCLUDE_DIRS})
  add_definitions(-DUSE_PAPI)
endif()

set(extra_sources)
if(USE_STAMP_PALLOC)
  add_definitions(-DSTAMP_PALLOC)
  add_definitions(-DSIMULATOR)
  set(extra_sources ${extra_sources} ${LIB_DIR}/memory.c)
endif()
if(USE_PAPI OR USE_SALLOC)
  set(extra_sources ${extra_sources} ${LIB_DIR}/force_cxx_linker.cpp)
endif()

if(USE_SALLOC)
  if(EXISTS /g/g14/nguyen91/local-bgq/lib/libtcmalloc_minimal.a)
    set(SALLOC_LIB /g/g14/nguyen91/local-bgq/lib/libtcmalloc_minimal.a)
  else()
    set(SALLOC_LIB /h1/ddn/local/lib/libtcmalloc_minimal.a)
  endif()
endif()

set(libraries ${CMAKE_THREAD_LIBS_INIT} m)

if(USE_SALLOC)
  set(libraries ${libraryes} ${SALLOC_LIB})
endif()

if(USE_PAPI)
  set(libraries ${libraries} ${PAPI_LIBRARIES})
endif()

if(USE_STM)
  add_definitions(-DSTM)
  include_directories(${tinystm_INCLUDE_DIRS})
  set(libraries ${libraries} ${tinystm_LIBRARIES})
elseif(USE_XTM)
  add_definitions(-DSTM)
  add_definitions(-DXTM)
  add_definitions(-DSIMULATOR)
  if(USE_XTM_INLINE)
    add_definitions(-DXTM_USE_INLINE_LOCKABLE)
  endif()
  include_directories(${XTM_INCLUDE_DIRS})
  set(libraries ${libraries} ${XTM_LIBRARIES})
elseif(USE_HTM)
  add_definitions(-DHTM)
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -qtm")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -qtm")
endif()

function(app name)
  add_executable(${name} ${ARGN} ${extra_sources})
  target_link_libraries(${name} ${libraries})
  install(TARGETS ${name} RUNTIME DESTINATION bin)
endfunction(app)


add_subdirectory(bayes)
add_subdirectory(genome)
add_subdirectory(intruder)
add_subdirectory(kmeans)
add_subdirectory(labyrinth)
add_subdirectory(ssca2)
add_subdirectory(vacation)
add_subdirectory(yada)
get_filename_component(LIB_DIR lib REALPATH)

if(CMAKE_CXX_COMPILER_ID MATCHES "XL")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -qalias=noansi")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -qalias=noansi")
elseif(CMAKE_CXX_COMPILER_ID MATCHES "GNU")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=gnu99")
endif()

include_directories(lib)

if(EXISTS /usr/global/tools/papi/bgqos_0/papi-5.0.1-V1R1M2/include)
  set(PAPI_INCLUDE_DIRS /usr/global/tools/papi/bgqos_0/papi-5.0.1-V1R1M2/include)
  set(PAPI_LIBRARIES /usr/global/tools/papi/bgqos_0/papi-5.0.1-V1R1M2/lib/libpapi.a rt)
else()
  set(PAPI_INCLUDE_DIRS /usr/lib64/papi-5.1.1/usr/include)
  set(PAPI_LIBRARIES /usr/lib64/papi-5.1.1/usr/lib/libpapi.so rt)
endif()

if(USE_PAPI)
  include_directories(${PAPI_INCLUDE_DIRS})
  add_definitions(-DUSE_PAPI)
endif()

set(extra_sources)
if(USE_STAMP_PALLOC)
  add_definitions(-DSTAMP_PALLOC)
  add_definitions(-DSIMULATOR)
  set(extra_sources ${extra_sources} ${LIB_DIR}/memory.c)
endif()
if(USE_PAPI OR USE_SALLOC)
  set(extra_sources ${extra_sources} ${LIB_DIR}/force_cxx_linker.cpp)
endif()

if(USE_SALLOC)
  if(EXISTS /g/g14/nguyen91/local-bgq/lib/libtcmalloc_minimal.a)
    set(SALLOC_LIB /g/g14/nguyen91/local-bgq/lib/libtcmalloc_minimal.a)
  else()
    set(SALLOC_LIB /h1/ddn/local/lib/libtcmalloc_minimal.a)
  endif()
endif()

set(libraries ${CMAKE_THREAD_LIBS_INIT} m)

if(USE_SALLOC)
  set(libraries ${libraryes} ${SALLOC_LIB})
endif()

if(USE_PAPI)
  set(libraries ${libraries} ${PAPI_LIBRARIES})
endif()

if(USE_STM)
  add_definitions(-DSTM)
  include_directories(${tinystm_INCLUDE_DIRS})
  set(libraries ${libraries} ${tinystm_LIBRARIES})
elseif(USE_XTM)
  add_definitions(-DSTM)
  add_definitions(-DXTM)
  add_definitions(-DSIMULATOR)
  if(USE_XTM_INLINE)
    add_definitions(-DXTM_USE_INLINE_LOCKABLE)
  endif()
  include_directories(${XTM_INCLUDE_DIRS})
  set(libraries ${libraries} ${XTM_LIBRARIES})
elseif(USE_HTM)
  add_definitions(-DHTM)
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -qtm")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -qtm")
endif()

function(app name)
  add_executable(${name} ${ARGN} ${extra_sources})
  target_link_libraries(${name} ${libraries})
  install(TARGETS ${name} RUNTIME DESTINATION bin)
endfunction(app)


add_subdirectory(bayes)
add_subdirectory(genome)
add_subdirectory(intruder)
add_subdirectory(kmeans)
add_subdirectory(labyrinth)
add_subdirectory(ssca2)
add_subdirectory(vacation)
add_subdirectory(yada)
